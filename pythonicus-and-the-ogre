# The introduction variable that will displays when the game starts.
introduction = "\n".join([
               "Pythonicus and The Ogre",
               "",
               "You wake up in a dark cave, not knowing how you got there.", 
               "Last you remember, you were out picking mushrooms for your",
               "horse (he's a weird horse) and next thing you know...",
               "you're in this stinky cavern.",
               "",
               "As you examine your surroundings, you notice a crossbow to",
               "your left and a sword to your right. You also see a big",
               "hulking ogre chowing down on your mushrooms, which happens",
               "to be Angry Mushrooms, which happens to make it's",
               "devourers more angry than usual (your horse is very weird).",
               "",
               "Much to your suprise, the ogre stops eating. His eyes gaze",
               "upon you and starts to advance your way.",
               "",
               "What do you do?",
               "",
               '- Grab the crossbow and kill him from a distance, duh!  (Enter "Easy")',
               '- Grab the sword and slice him up with your mad skillz! (Enter "Medium")',
               '- I will punch him to death!                            (Enter "Hard")',
               ""
               ])


# This variable prints when the user enters a wrong difficulty.
choose_difficulty_again = "\n".join([
                          "",
                          "The ogre looks confused by your no sense slur.",
                          "He begins to pick his nose.",
                          "Nows your chance! What do you do?",
                          "Hint: Do not add quotations.",
                          "",
                          '- Grab the crossbow and kill him from a distance, duh!  (Enter "Easy")',
                          '- Grab the sword and slice him up with your mad skillz! (Enter "Medium")',
                          '- I will punch him to death!                            (Enter "Hard")',
                          ""
                          ])


# The blank space strings to be passed into the quiz statements. User will be
# prompted to fill in the blanks correctly before moving on.
blank_space = ["__1__", "__1__.", "__2__", "__2__,", "__3__", "__4__", "__4__.", "__4__?"]


# These variables are passed in when the user is prompt for an answer on each
# blank.
blank_input_1 = "What goes in __1__ ? "
blank_input_2 = "What goes in __2__ ? "
blank_input_3 = "What goes in __3__ ? "
blank_input_4 = "What goes in __4__ ? "


# This variable prints out the story introduction for the easy level.
easy_intro = "\n".join([
             "",
             "You grab the crossbow, but you notice one glaring problem...",
             "There's no arrow.",
             "The ogre makes his way to you, but he doesn't seem angry at",
             "all. He starts to speak in sentences, but there seems to be",
             "blanks in between. He's asking for your help in exchange for",
             "your freedom. You heartily agree. Good luck!"
             ])


# The easy level question string.
easy_question = "__1__ is a language for programming computers. It's named after Monty Python. A __2__ is what tells the computer what to do. __3__ error means that what we tried to evaluate is not part of the Python language. Python provides a way to give complicated intergers or strings a name. They are called __4__."


# These variables determine if user input is correct for easy level.
easy_answers_1 = ["Python", "python"]
easy_answers_2 = ["program", "Program", "Programs", "programs"]
easy_answers_3 = ["Syntax", "syntax"]
easy_answers_4 = ["variables.", "variables", "variable", "Variables", "Variable"]


# This variable prints out the story introduction for the medium level.
medium_intro = "\n".join([
               "",
               "You grab the sword, but you realize it's just an eggplant...",
               "The ogre makes his way to you, but he doesn't seem angry at",
               "all. He starts to speak in sentences, but there seems to be",
               "blanks in between. He's asking for your help in exchange for",
               "your freedom. You heartily agree. Good luck!"
               ])


# The medium level question string.
medium_question = "You try something in code and it just doesn't work. These are called __1__. The __2__ tells you what line the code crashed on, what file it was running, and how it got there. A __3__ value is one of two things. It's either True or False. The first rule in our Pythonists' Guide to solving all problems in the known computational galaxy is to always ask, what are the __4__?"


# These variables determine if user input is correct for medium level.
medium_answers_1 = ["bugs.", "bugs", "Bugs", "Bug", "bug"]
medium_answers_2 = ["traceback", "Traceback", "Tracebacks", "tracebacks"]
medium_answers_3 = ["boolean", "Boolean", "Booleans", "booleans"]
medium_answers_4 = ["inputs?", "inputs", "Inputs", "Input", "input"]


# This variable prints out the story introduction for the hard level.
hard_intro = "\n".join([
             "",
             "You put your fists up and you see how pretty your hands are.",
             "It's not worth getting them all messy, so you decide to get a",
             "beating of a lifetime instead.",
             "The ogre makes his way to you, but he doesn't seem angry at",
             "all. He starts to speak in sentences, but there seems to be",
             "blanks in between. He's asking for your help in exchange for",
             "your freedom. You heartily agree. Good luck!"
             ])


# The hard level question string.
hard_question = "One of the pioneers in computing was Admiral Grace __1__. She was famous for walking around with __2__, which were pieces of wire that were the length light would travel in a nanosecond. Augusta __3__ King is often regarded as the __4__ computer programmer."


# These variables determine if user input is correct for hard level.
hard_answers_1 = ["Hopper.", "Hopper", "hopper"]
hard_answers_2 = ["nanosticks,", "nanosticks", "Nanosticks", "Nanostick", "nanostick"]
hard_answers_3 = ["Ada", "ada"]
hard_answers_4 = ["first", "First", "1st"]


# This dictionary gets passed into play_level to determine next level to be played.
quizzes = {
    "easy_1": (blank_input_1, easy_answers_1, "easy_2"),
    "easy_2": (blank_input_2, easy_answers_2, "easy_3"),
    "easy_3": (blank_input_3, easy_answers_3, "easy_4"),
    "easy_4": (blank_input_4, easy_answers_4, "end_level"),
    "medium_1": (blank_input_1, medium_answers_1, "medium_2"),
    "medium_2": (blank_input_2, medium_answers_2, "medium_3"),
    "medium_3": (blank_input_3, medium_answers_3, "medium_4"),
    "medium_4": (blank_input_4, medium_answers_4, "end_level"),
    "hard_1": (blank_input_1, hard_answers_1, "hard_2"),
    "hard_2": (blank_input_2, hard_answers_2, "hard_3"),
    "hard_3": (blank_input_3, hard_answers_3, "hard_4"),
    "hard_4": (blank_input_4, hard_answers_4, "end_level")
}


def pythonicus_introduction():
    '''
    This will start the game and print the story introduction. User will be
    prompt to choose an action(difficulty). Game will not continue until proper
    input has been entered.
    '''
    print introduction
    while True:
        user_input = raw_input("Choose a difficulty: ")
        if user_input in ("Easy", "easy", "E", "e"):
            print easy_intro
            return play_level(easy_question, *quizzes["easy_1"])
        elif user_input in ("Medium", "medium", "M", "m"):
            print medium_intro
            return play_level(medium_question, *quizzes["medium_1"])
        elif user_input in ("Hard", "hard", "H", "h"):
            print hard_intro
            return play_level(hard_question, *quizzes["hard_1"])
        else:
            print choose_difficulty_again


def word_in_pos(question, blank_space):
    '''
    Checks if a blank space is passed into the question.
    '''
    for pos in blank_space:
        if pos in question:
            return pos
    return "None"


# This varible prints out when the player answers wrong.
try_again = "\n".join([
            "",
            "Nope. That doesn't sound right.",
            ""
            ])


def play_level(level_question, blank_input, level_answers, next_level):
    '''
    This starts the level of the game.
    '''
    print "\n{0}\n".format(level_question)
    level_question = level_question.split()
    pos = word_in_pos(level_question, blank_space)
    while True:
      user_input = raw_input(blank_input)
      if user_input in level_answers:
          level_question = " ".join(level_question)
          level_question = level_question.replace(pos, level_answers[0])
          if next_level in "end_level":
              print "\n{0}\n".format(level_question)
              return end_game()
          else:
              return play_level(level_question, *quizzes[next_level])
      else:
          print try_again


# These are the ending variables that will print when player reaches the
# end of game.
ending = "\n".join([
         "You did it! Good job!",
         "The ogre looks very happy and he gives you a great big hug!",
         "He hands you what's left of the Angry Mushrooms and leads you",
         "out of his lovely home. Your horse will be glad to have dinner.",
         "Also that you're still alive. I think...",
         "He might not care about that. He's a weird horse.",
         ""
         ])


ending_2 = "\n".join([
           "",
           "Slur again? Seriously?",
           ""
           ])


ending_spacing = "\n".join([
                 "",
                 "",
                 ])


def end_game():
    '''
    This is when the player reaches the end of the game. Player gets an ending to
    the story and is asked if they would like to play again. "Yes" will restart
    the program and "No" will close the program.
    '''
    print ending
    while True:
        user_input = raw_input('Would you like to play again? (Enter "Yes" or "No"): ')
        if user_input in ("No", "no", "N", "n"):
            break
        elif user_input in ("Yes", "yes", "Y", "y"):
            print ending_spacing
            return pythonicus_introduction()
        else:
            print ending_2
    print ""
    return "Thanks for playing! May the Force be with you!"


# Starts the game.
print pythonicus_introduction()
